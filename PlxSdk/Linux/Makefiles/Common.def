#-----------------------------------------------------------------------------
#
#      File         :  Common.def
#      Abstract     :  Common definitions between all targets
#
#-----------------------------------------------------------------------------


#=============================================================================
# Check for errors
#=============================================================================
ifndef PLX_SDK_DIR
    $(error ERROR: Variable 'PLX_SDK_DIR' not set ***)
endif

ifndef TOOLS_NAME
    # Only Gcc is supported
    TOOLS_NAME := Gcc
endif

ifndef ImageName
    $(error ERROR: Variable 'ImageName' not set ***)
endif

ifndef TGT_TYPE
    $(error ERROR: Variable 'TGT_TYPE' not set ***)
endif

ifndef PLX_CHIP
    ifeq ($(TGT_TYPE), Driver)
        $(error ERROR: Variable 'PLX_CHIP' not set ***)
    else
        PLX_CHIP := n/a
    endif
endif

ifndef KERNEL_VER
    ifeq ($(TGT_TYPE), Driver)
        $(error ERROR: Variable 'KERNEL_VER' not set ***)
    else
        KERNEL_VER := n/a
    endif
endif

ifndef PLX_CPU_BITS
    ifneq ($(TGT_TYPE), Driver)
        PLX_CPU_BITS := ??
    endif
endif

ifdef PLX_CPU_BIG_ENDIAN
    PLX_CPU_ENDIAN := Big
else
    PLX_CPU_ENDIAN := Little
endif

ifndef KDIR
    ifeq ($(TGT_TYPE), Driver)
        KDIR := /lib/modules/$(shell uname -r)/build
        PWD  := $(shell pwd)
    endif
endif



#=============================================================================
# Conditional to enable verbose mode (display commands)
#
#  V defined     = Commands will be displayed
#  V not defined = Commands will not be displayed
#=============================================================================
ifndef V
    Q=@
else
    VERBOSE=-v
endif



#=============================================================================
# The directory locations:
#
#  OUT_DIR      = Contains the final build images
#  OBJ_DIR      = Contains all intermediate build files (e.g. obj, map, etc)
#  COMMON_DIR   = Directory where common shared files reside
#  PLX_CHIP_DIR = Directory where chip-specific driver files are located
#=============================================================================
ifeq ($(TGT_TYPE), Driver)
    OUT_DIR = Plx$(PLX_CHIP)
else
    OUT_DIR = $(TGT_TYPE)
endif

OBJ_DIR = $(OUT_DIR)/Obj$(DBG)

ifeq ($(TGT_TYPE), App)
    COMMON_DIR := $(PLX_SDK_DIR)/Linux/Samples/Shared
endif

ifeq ($(TGT_TYPE), Driver)
    # Set default source directory
    COMMON_DIR := Source.Plx$(PLX_CHIP)

    # Set source directory for 9000 series
    ifneq ($(PLX_CHIP), Svc)
        ifneq ($(PLX_CHIP), 8000)
            ifneq ($(PLX_CHIP), 6000)
                ifneq ($(PLX_CHIP), Dma)
                    ifneq ($(PLX_CHIP), EoPCIe)
                        COMMON_DIR   := Source.Plx9000
                        PLX_CHIP_DIR := $(COMMON_DIR)/Chip/$(PLX_CHIP)
                    endif
                endif
            endif
        endif
    endif
endif



#=============================================================================
# Additional include directories
# Note: Put '-I' before Include directories
#=============================================================================
PLX_INC_DIR += -I$(PLX_SDK_DIR)/Include

ifeq ($(TGT_TYPE), App)
    PLX_INC_DIR +=  -I. -I$(COMMON_DIR)
endif

ifeq ($(TGT_TYPE), Driver)
    PLX_INC_DIR += \
       -I$(KDIR)/include \
       -I$(PLX_SDK_DIR)/Linux/Driver/$(COMMON_DIR) \
       -I$(PLX_SDK_DIR)/Linux/Driver/$(PLX_CHIP_DIR)
endif



#=============================================================================
# Additional application Library files
#   -lm  : Adds math library (for pow() function)
#   -ldl : Add support for dynamic library loading functions (used in Aardvark.c)
#=============================================================================
ifeq ($(TGT_TYPE), App)
    LFLAGS += -lm -ldl
    LIBS   += $(PLX_SDK_DIR)/Linux/PlxApi/Library/PlxApi$(DBG).a
endif



#=============================================================================
# Additional PLX-specific command-line options
#=============================================================================
ifdef PLX_CPU_BIG_ENDIAN
    PLX_OPT += -DPLX_BIG_ENDIAN
else
    PLX_OPT += -DPLX_LITTLE_ENDIAN
endif

ifdef PLX_RED_HAT_KERNEL
    PLX_OPT += -DRED_HAT_LINUX_KERNEL
endif

ifdef PLX_DEBUG
    PLX_OPT += -DPLX_DEBUG
endif

ifeq ($(TGT_TYPE), App)
    PLX_OPT += -DPLX_LINUX 
endif

ifeq ($(TGT_TYPE), Library)
    PLX_OPT += -DPLX_LINUX -fPIC
endif

ifeq ($(TGT_TYPE), Driver)
    ifeq ($(KERNEL_VER), 2.4)
        PLX_OPT += -D__KERNEL__ -D__NO_VERSION__ -DMODULE
    endif

    ifneq ($(PLX_CHIP), Svc)
        PLX_OPT += -DPCI$(PLX_CHIP)
    endif

    ifdef PLX_DISPLAY_SGL
        PLX_OPT += -DPLX_DISPLAY_SGL
    endif

    PLX_OPT += -DPLX_DRIVER -DPLX_LINUX_DRIVER
endif

# Set flag for 32/64-bit system
ifeq ($(PLX_CPU_BITS), 32)
    PLX_OPT += -DPLX_32BIT
else
    ifeq ($(PLX_CPU_BITS), 64)
        PLX_OPT += -DPLX_64BIT
    endif
endif

EXTRA_CFLAGS += $(PLX_OPT) $(PLX_INC_DIR)



#=============================================================================
# PLX specific definitions
#=============================================================================
ifdef PLX_DEBUG
    DBG        = _dbg
    BUILD_TYPE = Debug
else
    BUILD_TYPE = Release
endif
